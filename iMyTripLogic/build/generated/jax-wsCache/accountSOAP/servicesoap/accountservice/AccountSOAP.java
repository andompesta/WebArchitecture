
package servicesoap.accountservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "accountSOAP", targetNamespace = "http://accountService.serviceSoap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AccountSOAP {


    /**
     * 
     * @return
     *     returns java.util.List<servicesoap.accountservice.Account>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccount", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetAccount")
    @ResponseWrapper(localName = "getAccountResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetAccountResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/getAccountRequest", output = "http://accountService.serviceSoap/accountSOAP/getAccountResponse")
    public List<Account> getAccount();

    /**
     * 
     * @param descrizione
     * @param prezzo
     * @param userName
     * @param idConto
     * @return
     *     returns servicesoap.accountservice.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eseguiBonifico", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.EseguiBonifico")
    @ResponseWrapper(localName = "eseguiBonificoResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.EseguiBonificoResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/eseguiBonificoRequest", output = "http://accountService.serviceSoap/accountSOAP/eseguiBonificoResponse")
    public Account eseguiBonifico(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "idConto", targetNamespace = "")
        int idConto,
        @WebParam(name = "prezzo", targetNamespace = "")
        float prezzo,
        @WebParam(name = "descrizione", targetNamespace = "")
        String descrizione);

    /**
     * 
     * @param contoToDelete
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteConto", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.DeleteConto")
    @ResponseWrapper(localName = "deleteContoResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.DeleteContoResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/deleteContoRequest", output = "http://accountService.serviceSoap/accountSOAP/deleteContoResponse")
    public boolean deleteConto(
        @WebParam(name = "contoToDelete", targetNamespace = "")
        int contoToDelete);

    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<servicesoap.accountservice.Movimento>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMovimenti", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetMovimenti")
    @ResponseWrapper(localName = "getMovimentiResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetMovimentiResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/getMovimentiRequest", output = "http://accountService.serviceSoap/accountSOAP/getMovimentiResponse")
    public List<Movimento> getMovimenti(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param userName
     * @param password
     * @return
     *     returns servicesoap.accountservice.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccountByuNameAndPass", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetAccountByuNameAndPass")
    @ResponseWrapper(localName = "getAccountByuNameAndPassResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetAccountByuNameAndPassResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/getAccountByuNameAndPassRequest", output = "http://accountService.serviceSoap/accountSOAP/getAccountByuNameAndPassResponse")
    public Account getAccountByuNameAndPass(
        @WebParam(name = "userName", targetNamespace = "")
        String userName,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param account
     * @return
     *     returns servicesoap.accountservice.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateAccount", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.UpdateAccount")
    @ResponseWrapper(localName = "updateAccountResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.UpdateAccountResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/updateAccountRequest", output = "http://accountService.serviceSoap/accountSOAP/updateAccountResponse")
    public Account updateAccount(
        @WebParam(name = "Account", targetNamespace = "")
        Account account);

    /**
     * 
     * @return
     *     returns java.util.List<servicesoap.accountservice.LocalitaPubblica>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLocaitaPubbliche", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetLocaitaPubbliche")
    @ResponseWrapper(localName = "getLocaitaPubblicheResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetLocaitaPubblicheResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/getLocaitaPubblicheRequest", output = "http://accountService.serviceSoap/accountSOAP/getLocaitaPubblicheResponse")
    public List<LocalitaPubblica> getLocaitaPubbliche();

    /**
     * 
     * @param localitaToDelete
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteLocalitaPrivata", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.DeleteLocalitaPrivata")
    @ResponseWrapper(localName = "deleteLocalitaPrivataResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.DeleteLocalitaPrivataResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/deleteLocalitaPrivataRequest", output = "http://accountService.serviceSoap/accountSOAP/deleteLocalitaPrivataResponse")
    public boolean deleteLocalitaPrivata(
        @WebParam(name = "localitaToDelete", targetNamespace = "")
        int localitaToDelete);

    /**
     * 
     * @param account
     * @return
     *     returns servicesoap.accountservice.Rc
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.CreateAccountResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/createAccountRequest", output = "http://accountService.serviceSoap/accountSOAP/createAccountResponse")
    public Rc createAccount(
        @WebParam(name = "Account", targetNamespace = "")
        Account account);

    /**
     * 
     * @param account
     * @return
     *     returns servicesoap.accountservice.Rc
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "enableAccount", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.EnableAccount")
    @ResponseWrapper(localName = "enableAccountResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.EnableAccountResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/enableAccountRequest", output = "http://accountService.serviceSoap/accountSOAP/enableAccountResponse")
    public Rc enableAccount(
        @WebParam(name = "Account", targetNamespace = "")
        Account account);

    /**
     * 
     * @param emailUtente
     * @return
     *     returns servicesoap.accountservice.Rc
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "restPass", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.RestPass")
    @ResponseWrapper(localName = "restPassResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.RestPassResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/restPassRequest", output = "http://accountService.serviceSoap/accountSOAP/restPassResponse")
    public Rc restPass(
        @WebParam(name = "emailUtente", targetNamespace = "")
        String emailUtente);

    /**
     * 
     * @param nome
     * @return
     *     returns servicesoap.accountservice.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccountByName", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetAccountByName")
    @ResponseWrapper(localName = "getAccountByNameResponse", targetNamespace = "http://accountService.serviceSoap/", className = "servicesoap.accountservice.GetAccountByNameResponse")
    @Action(input = "http://accountService.serviceSoap/accountSOAP/getAccountByNameRequest", output = "http://accountService.serviceSoap/accountSOAP/getAccountByNameResponse")
    public Account getAccountByName(
        @WebParam(name = "Nome", targetNamespace = "")
        String nome);

}
